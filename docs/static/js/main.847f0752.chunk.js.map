{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KAiB9C,OACI,sBAAMC,SAVU,SAACC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAOP,GAAP,mBAAsBO,OACzCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,YAAY,iBACZC,MAASV,EACTW,SAnBa,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,+BCTjBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAWH,GAF9C,+DAGII,MAAMF,GAHV,cAGbG,EAHa,gBAIIA,EAASC,OAJb,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAebM,GAfa,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,yCAAf,UACK,qBAAKC,IAAOf,EAAMgB,IAAMN,IACxB,oBAAGI,UAAU,iBAAb,cAAgCJ,EAAhC,WCHAO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECDf,SAAEA,GAAe,IAAD,EAEdf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAoBxC,OAbAC,qBAAW,WACPxB,EAASC,GACRwB,MAAM,SAAAC,GAECH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAAEpB,IAEEqB,EDjB2BK,CAAc1B,GAAlCa,EAFyB,EAE/BN,KAAca,EAFiB,EAEjBA,QAEtB,OACI,qCACA,qBAAIJ,UAAU,sBAAd,cAAsChB,EAAtC,OAEEoB,GAAW,wCAEb,qBAAKJ,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEUfgB,EAzBM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,mBAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAIvB,OACI,qCACI,oBAAIgC,UAAU,0DAAd,0BACA,cAAC,EAAD,CAAahC,cAAkBA,IAE/B,uBAEI,6BAEO4C,EAAWnB,KAAK,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAYA,GADLA,Y,MCZnC6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.847f0752.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ( {setcategories} ) => {\r\n    \r\n   const [inputValue, setInputValue] = useState('') \r\n\r\n   const handleInputChange = (e) => {\r\n       setInputValue(e.target.value)\r\n   }\r\n\r\n   const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2) {\r\n            setcategories( cats =>  [ inputValue, ...cats, ] );\r\n            setInputValue('');\r\n        }\r\n   }\r\n    \r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Ingrese nombre\"\r\n                value= { inputValue }\r\n                onChange= { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired\r\n    \r\n}","export const getGifs = async ( category ) => {\r\n            \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category ) }&limit=10&api_key=n89YmE8ZSFHSwaO7ofjaUBt0EiyaQrOj`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n    //Crear objeto con los datos necesarios\r\n    const gifs = data.map (img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n        \r\n    })\r\n\r\n   return gifs;\r\n \r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n             <img src= { url } alt= {title} />\r\n             <p className=\"title-category\"> {title} </p>        \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n    \r\n    const { data: images, loading } = useFetchGifs( category )\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"title-category-main\"> {category} </h3>\r\n\r\n        { loading && <p >Loading</p>}\r\n\r\n        <div className=\"card-grid\">\r\n            \r\n            {\r\n                images.map( img => (\r\n                   <GifGridItem\r\n                   key = {img.id} \r\n                   {...img}\r\n                    />\r\n                ))\r\n            }\r\n           \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n        .then( imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                });\r\n            \r\n        })\r\n\r\n    }, [ category ] );\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setcategories] = useState(['Rick and Morty']);\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"titulo-principal card animate__animated animate__fadeIn\">GifExpertApp</h2>\r\n            <AddCategory setcategories = { setcategories } />\r\n            \r\n            <hr /> \r\n            \r\n                <ol>\r\n                    {\r\n                       categories.map( category =>( \r\n                            <GifGrid \r\n                            key= { category }\r\n                            category= { category } />\r\n                       ))\r\n                    }\r\n                </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}